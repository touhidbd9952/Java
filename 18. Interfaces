Another way to achieve abstraction in Java, is with interfaces
An interface is a completely "abstract class".

// Interface
interface Animal 
{
  public void animalSound(); // interface method (does not have a body)
  public void sleep(); // interface method (does not have a body)
}

// Dog "implements" the Animal interface
class Dog implements Animal 
{
  public void animalSound() 
  {
    // The body of animalSound() is provided here
    System.out.println("The pig says: bow wow");
  }
  public void sleep() 
  {
    // The body of sleep() is provided here
    System.out.println("Zzz");
  }
}

class Main 
{
  public static void main(String[] args) 
  {
    Dog myDog = new Dog();  // Create a Pig object
    myDog.animalSound();
    myDog.sleep();
  }
}

////////////////////////////////////////////////////////////////////

//////////Multiple Interfaces///////////////////////////////////////
interface FirstInterface 
{
  public void myMethod(); // interface method
}

interface SecondInterface 
{
  public void myOtherMethod(); // interface method
}

class DemoClass implements FirstInterface, SecondInterface 
{
  public void myMethod() 
  {
    System.out.println("Some text..");
  }
  public void myOtherMethod() 
  {
    System.out.println("Some other text...");
  }
}

class Main 
{
  public static void main(String[] args) 
  {
    DemoClass myObj = new DemoClass();
    myObj.myMethod();
    myObj.myOtherMethod();
  }
}
